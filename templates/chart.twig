<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=Edge"/>
    <title>{{ chart.title | replace({'<br/>': ' - '}) | striptags }}</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <!--[if lt IE 7]>
    <meta http-equiv="refresh" content="0;URL='static.html'">
    <![endif]-->
    <!--[if lt IE 9]>
    <script src="{{ DW_DOMAIN }}/static/vendor/json-js/json2.min.js"></script>
    <script type="text/javascript">
        window.__ltie9 = true;
    </script>
    <![endif]-->
    {% if innersvg %}
    <script type="text/javascript" src="{{ DW_DOMAIN }}/static/vendor/innersvg/innersvg.js"></script>
    {% endif %}

    {{ hook('chart_html_head', chart) }}

{% for src in stylesheets %}
    <link rel="stylesheet" type="text/css" href="{{ src }}"></link>
{% endfor %}

    <script type="text/javascript">
    window.__locale = '{{ chartLocale }}';
    </script>

{% for src in scripts %}
    <script type="text/javascript" src="{{ src }}"></script>
{% endfor %}
    <script type="text/javascript">

    // fullscreen
(function(){var a={supportsFullScreen:!1,nonNativeSupportsFullScreen:!1,isFullScreen:function(){return!1},requestFullScreen:function(){},cancelFullScreen:function(){},fullScreenEventName:"",prefix:""},b="webkit moz o ms khtml".split(" ");if(typeof document.cancelFullScreen!="undefined")a.supportsFullScreen=!0;else for(var c=0,d=b.length;c<d;c++){a.prefix=b[c];if(typeof document[a.prefix+"CancelFullScreen"]!="undefined"){a.supportsFullScreen=!0;break}}a.supportsFullScreen?(a.fullScreenEventName=a.prefix+"fullscreenchange",a.isFullScreen=function(){switch(this.prefix){case"":return document.fullScreen;case"webkit":return document.webkitIsFullScreen;default:return document[this.prefix+"FullScreen"]}},a.requestFullScreen=function(a){return this.prefix===""?a.requestFullScreen():a[this.prefix+"RequestFullScreen"]()},a.cancelFullScreen=function(a){return this.prefix===""?document.cancelFullScreen():document[this.prefix+"CancelFullScreen"]()}):typeof window.ActiveXObject!="undefined"&&(a.nonNativeSupportsFullScreen=!0,a.requestFullScreen=a.requestFullScreen=function(a){var b=new ActiveXObject("WScript.Shell");b!==null&&b.SendKeys("{F11}")},a.isFullScreen=function(){return document.body.clientHeight==screen.height&&document.body.clientWidth==screen.width}),typeof jQuery!="undefined"&&(jQuery.fn.requestFullScreen=function(){return this.each(function(){a.supportsFullScreen&&a.requestFullScreen(this)})}),window.fullScreenApi=a})()

    </script>

</head>
<body class="chart{% if fullscreen %} fullscreen{% endif %}{% if plain %} plain{% endif %}">

    {# some convenient short cuts for theme templates #}
    {% set title = chart.title %}{% set intro = chart.metadata.describe.intro %}{% set source = chart.metadata.describe['source-name'] %}{% set sourceURL = chart.metadata.describe['source-url'] %}


    {% include theme.template ? theme.template : 'plugins/theme-default/default.twig' %}

    <div class="noscript" style="position: absolute;top: 0;left: 0;z-index: -10;">
        <a href="static.html"><img src="nojs.png" alt="{% trans "Please activate JavaScript to see the interactive chart." %}" /></a>
    </div>
    <div class="noscript" style="height:95%;position:absolute;top:0;width:98%;z-index:10;overflow:hidden">
        <div style="position:relative;top:50%;text-align:center;font-size:18px;padding:0 20px"><a style="color: rgba(0,0,0,.2); text-shadow: 0 0 7px #fff, 0 0 7px #fff, 0 0 7px #fff, 0 0 7px #fff, 0 0 7px #fff, 0 0 7px #fff, 0 0 7px #fff, 0 0 7px #fff, 0 0 7px #fff, 0 0 7px #fff, 0 0 7px #fff; text-decoration: none;" href="static.html" >{% trans "Please activate JavaScript to see the interactive chart." %}</a></div>
    </div>
    <script type="text/javascript">

    if (document.getElementsByTagName('script').length > 0) $('body').addClass('js');

    (function() {

        var chart;

        if(!getVis().checkBrowserCompatibility()){
            window.location.href = 'static.html';
            return;
        }

        function renderChart() {
            if (__dw.vis && !__dw.vis.supportsSmartRendering()) {
                // a current visualization exists but it is not smart
                // enough to re-render itself properly, so we need to
                // reset and remove it
                __dw.vis.reset();
            }

            // compute chart dimensions
            var w = $('#chart').innerWidth(),
                h = dw.utils.getMaxChartHeight($('#chart'));

            if (!$.support.leadingWhitespace) w -= 10; // IE Fix
            w -= $('body').css('padding-left').replace('px', '');
            w -= $('body').css('padding-right').replace('px', '');

            var vis;
            if (__dw.vis && __dw.vis.supportsSmartRendering()) {
                // a current visualization exists and it is smart enough
                // to re-render itself
                vis = __dw.vis;
            } else {
                // we have to create a new vis
                vis = __dw.vis = getVis();
                chart.vis(vis);
            }

            vis.size(w, h);

            initResizeHandler();
            initFullscreen();

            // update data link to point to edited dataset
            if (!window['__ltie9']) {
                $('a[href=data]')
                    .attr('download', 'data-'+chart.get('id')+'.csv')
                    .attr('href', 'data:application/octet-stream;charset=utf-8,' +
                        encodeURIComponent(chart.dataset().toCSV()));
            }

            chart.render($('#chart'));
        }

        function chartLoaded() {
            chart = dw.chart(old_chart_attributes)
                    .locale('{{ chartLocale }}')
                    .metricPrefix({{ metricPrefix | json | raw }})
                    .theme(dw.theme('{{ theme.id }}'));
            return chart.load();
        }

        function getVis() {
            var vis = dw.visualization('{{ visualization.id }}');
            vis.meta = JSON.parse("{{ visualization | json | escape('js') }}");
            vis.lang = '{{ lang }}';
            return vis;
        }

        function initResizeHandler() {
            var reload_timer;
            // IE continuosly reloads the chart for some strange reasons
            if (navigator.userAgent.match(/iPad|msie/i) == null) {
                $(window).off('resize').on('resize', function() {
                    // IMPORTANT: throttle resize events, do not remover timeout
                    if (reload_timer) clearTimeout(reload_timer);
                    reload_timer = setTimeout(function() {
                        renderChart();
                    }, 300);
                });
            }
        }

        function initFullscreen() {
            var isFullScreen = false;
            $(window).bind('resize', function() {
                if (isFullScreen != fullScreenApi.isFullScreen()) { // video fullscreen mode has changed
                    isFullScreen = fullScreenApi.isFullScreen();

                    if (isFullScreen) {
                        $('.chart').addClass('fullscreen');
                        // you have just ENTERED full screen video
                    } else {
                        $('.chart').removeClass('fullscreen');
                        // you have just EXITED full screen video
                    }
                }
            });

            $("a[data-toggle='fullscreen']").click(function(e) {
                if (fullScreenApi.supportsFullScreen) {
                    e.preventDefault();
                    $('html').requestFullScreen();
                }
            });
        }

        var old_chart_attributes = JSON.parse('{{ chart.toJSON | raw }}');

        window.__dw = {
            old_attrs: old_chart_attributes,
            render: (function() {
                var timeout;
                return function() {
                    clearTimeout(timeout);
                    timeout = setTimeout(function() {
                        renderChart();
                    }, 200);
                };
            })()
        };

        $.when($.ready(), chartLoaded()).done(renderChart);

    })();

    </script>

    {{ hook('chart_after_body', chart) }}
</body>
</html>
