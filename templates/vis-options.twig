{% block visoptions %}

<fieldset>

    {% if vis.dimensions == 1 %}
    <div class="control-group select-row">
        <label class="control-label" for="text-title">{% trans "Select row to display" %}</label>
        <div class="controls">
            <select id="select-row" style="width:auto">
            </select>
        </div>
    </div>
    {% endif %}

    {% for key, option in vis.options %}
    <div class="control-group" style="margin-bottom:0px">
        {% if option.type == 'checkbox' %}
            <div class="contols">
                <label class="checkbox" for="{{ key }}"><input type="checkbox" id="{{ key }}" /> {{ option.label.en }}</label>
            </div>

        {% elseif option.type == 'select' %}

            <label class="control-label" for="{{ key }}">{{ option.label.en }}</label>
            <div class="controls">
                <select id="{{ key }}">
                    {% for opt in option.options %}
                    <option value="{{ opt.value }}">{{ opt.label.en }}</option>
                    {% endfor %}
                </select>
            </div>

        {% elseif option.type == 'radio' %}

            <label class="control-label"  for="{{ key }}">{{ option.label.en }}</label>
            <div class="controls form-inline">
                {% for opt in option.options %}
                <label class="radio"><input type="radio" name="{{ key }}" value="{{ opt.value }}" {% if opt.default %}checked="checked" {% endif %}/> {{ opt.label.en }}</label><br />
                {% endfor %}
            </div>

        {% else %}
            <p>Unhandled option type {{ option.type }}</p>
        {% endif %}
    </div>
    {% endfor %}
</fieldset>
<script type="text/javascript">

$(function() {
    function syncVisOptions(vis) {
        _.each(vis.options, function(opt, key) {
            if (opt.type == 'radio') {
                DW.currentChart.sync('input[name='+key+']', 'metadata.visualize.'+key);
            } else {
                DW.currentChart.sync('#'+key, 'metadata.visualize.'+key);
            }
        });
    };

    // initial visualization meta
    var vis = JSON.parse('{{ vis|json|raw }}');
    syncVisOptions(vis);

    // populate select-row
    if (vis.dimensions == 1) {
        DW.currentChart.datasetLoaded(function(chart) {
            if (chart.numRows() > 1) {
                var selRows = $('#select-row');
                for (var r=0; r<chart.numRows(); r++) {
                    selRows.append('<option value="'+r+'">'+chart.rowLabel(r)+'</option>');
                }
                chart.sync('#select-row', 'metadata.visualize.selected-row');
            } else {
                $('.select-row').hide();
            }
        });
    }
});

</script>

{% endblock %}